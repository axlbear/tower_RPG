void mapCreate01 (void)
{
    // Empty Map
    int tower_level = 1;

    int map01[20][61] = {{219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,},
    {219,178,178,178,178,178,219,178,178,178,178,178,178,178,178,178,219,178,178,178,178,178,178,219,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,219,178,178,178,178,178,178,178,178,178,219,178,178,219,178,178,178,178,178,178,178,219,},
    {219,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,178,176,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,219,176,176,219,176,176,176,176,176,176,176,219,},
    {219,176,176,176,176,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,176,176,219,176,176,219,219,219,219,219,219,219,219,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,178,176,176,176,176,176,176,176,219,},
    {219,176,176,176,176,176,219,176,176,176,219,176,176,176,176,176,219,176,176,176,176,176,176,219,176,176,178,178,178,178,178,178,178,178,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,219,},
    {219,219,219,219,219,219,219,176,176,176,219,176,176,176,176,176,219,176,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,219,219,219,219,219,219,219,219,219,176,219,},
    {219,178,178,178,178,178,219,176,176,176,219,176,176,176,176,176,219,219,219,176,219,219,219,219,219,219,219,219,219,219,219,219,219,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,178,178,178,178,178,178,178,178,178,176,219,},
    {219,176,176,176,176,176,219,176,176,176,219,176,176,176,176,176,219,178,178,176,178,178,178,178,178,178,178,178,178,178,178,219,178,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,219,},
    {219,176,176,176,176,176,178,176,176,176,219,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,176,176,176,176,219,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,219,176,176,176,176,219,176,176,219,},
    {219,176,176,176,176,176,176,176,176,176,219,176,176,176,176,176,219,176,176,219,176,176,176,176,176,176,176,176,219,176,176,219,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,178,176,176,176,176,178,176,176,219,},
    {219,219,219,219,219,219,219,176,176,176,219,176,176,176,176,176,219,176,176,178,176,176,176,176,176,176,176,176,178,176,176,178,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,219,},
    {219,178,178,178,178,178,219,176,176,176,219,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,219,},
    {219,176,176,176,176,176,219,176,176,176,219,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,176,176,176,176,219,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,219,},
    {219,176,176,176,176,176,176,176,176,176,219,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,176,176,176,176,219,219,219,219,219,219,176,219,219,219,219,176,219,219,219,219,176,219,219,176,176,219,176,176,176,176,219,176,176,219,},
    {219,176,176,176,176,176,219,176,176,176,219,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,176,176,176,176,219,178,178,178,178,178,176,178,219,178,178,176,178,219,178,178,176,178,219,176,176,178,176,176,176,176,178,176,176,219,},
    {219,219,219,219,219,219,219,176,176,176,219,219,219,219,176,176,219,176,176,176,176,176,176,176,176,176,176,176,176,176,176,219,176,176,176,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,219,},
    {219,178,178,178,178,178,219,176,176,176,219,178,178,178,176,176,219,176,176,219,176,176,176,176,176,176,176,176,219,176,176,219,176,176,176,176,176,176,176,219,176,176,176,176,219,176,176,176,176,219,219,176,219,219,219,219,219,219,219,219,219,},
    {219,176,176,176,176,176,178,176,176,176,219,176,176,176,176,176,219,176,176,178,176,176,176,176,176,176,176,176,178,176,176,219,176,176,176,176,176,176,176,219,176,176,176,176,219,176,176,176,176,178,178,176,178,178,178,178,178,178,178,178,219,},
    {219,176,176,176,176,176,176,176,176,176,219,176,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,176,176,176,176,219,176,176,176,176,176,176,176,219,176,176,176,176,219,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,219,},
    {219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,}};
    
    // Map assests
    map01[13][6] = V_DOOR;
    map01[3][6] = V_DOOR;
    map01[6][19] = H_DOOR;
    map01[6][33] = H_DOOR;
    map01[16][39] = V_DOOR;
    map01[13][47] = H_DOOR;
    map01[16][51] = H_DOOR;
    map01[3][2] = WEAPON;
    map01[13][2] = POTION;
    map01[14][11] = KEY;
    map01[18][30] = KEY;
    map01[12][35] = KEY;
    map01[2][40] = KEY;
    map01[18][45] = KEY;
    map01[7][50] = KEY;
    map01[16][11] = LEVER_ON;
    map01[14][32] = LEVER_ON;
    map01[17][59] = LEVER_ON;
    map01[3][16] = BARRIER;
    map01[13][42] = BARRIER;
    map01[5][59] = BARRIER;
    //map01[10][14] = ENEMY;
    //map01[13][21] = ENEMY;
    //map01[12][28] = ENEMY;
    //map01[17][34] = ENEMY;
    //map01[7][47] = ENEMY;
    //map01[11][54] = ENEMY;
    map01[8][2] = STAIRS;
    map01[0][50] = STAIRS;
    map01[0][51] = STAIRS;
    map01[1][50] = STAIRS;
    map01[1][51] = STAIRS;

    // Player's initial position
    int vert = 17, horz = 2;
    // Player's inventory
    int keys = 0, potions = 0;
    // Enemies' initial position
    int enemy_vert_01 = 10, enemy_horz_01 = 14;
    int enemy_vert_02 = 13, enemy_horz_02 = 21;
    int enemy_vert_03 = 12, enemy_horz_03 = 28;
    int enemy_vert_04 = 17, enemy_horz_04 = 34;
    int enemy_vert_05 = 7, enemy_horz_05 = 47;
    int enemy_vert_06 = 11, enemy_horz_06 = 54;

    int enemy_alive_01 = 1;
    int enemy_alive_02 = 1;
    int enemy_alive_03 = 1;
    int enemy_alive_04 = 1;
    int enemy_alive_05 = 1;
    int enemy_alive_06 = 1;

    do
    {
        //Clear the Window
        refresh();
        //Set Player and Enemies Positions
        map01[vert][horz] = PLAYER;
        Sleep(0.2);
        if (enemy_alive_01 == 1) map01[enemy_vert_01][enemy_horz_01] = ENEMY;
        else map01[enemy_vert_01][enemy_horz_01] = WALL;
        Sleep(0.2);
        if (enemy_alive_02 == 1) map01[enemy_vert_02][enemy_horz_02] = ENEMY;
        else map01[enemy_vert_02][enemy_horz_02] = WALL;
        Sleep(0.2);
        if (enemy_alive_03 == 1) map01[enemy_vert_03][enemy_horz_03] = ENEMY;
        else map01[enemy_vert_03][enemy_horz_03] = WALL;
        Sleep(0.2);
        if (enemy_alive_04 == 1) map01[enemy_vert_04][enemy_horz_04] = ENEMY;
        else map01[enemy_vert_04][enemy_horz_04] = WALL;
        Sleep(0.2);
        if (enemy_alive_05 == 1) map01[enemy_vert_05][enemy_horz_05] = ENEMY;
        else map01[enemy_vert_05][enemy_horz_05] = WALL;
        Sleep(0.2);
        if (enemy_alive_06 == 1) map01[enemy_vert_06][enemy_horz_06] = ENEMY;
        else map01[enemy_vert_06][enemy_horz_06] = WALL;
        Sleep(0.2);
        // Print Map
        printMap(map01);
        //MENU
        printf("| KEYS = %d\n| POTIONS = %d\n| Use SPACE BAR to Interact.\n", keys, potions);
        // Check Colision for Combat
        checkColisionCombat(map01, &enemy_vert_01, &enemy_horz_01, &enemy_alive_01);
        Sleep(0.2);
        checkColisionCombat(map01, &enemy_vert_02, &enemy_horz_02, &enemy_alive_02);
        Sleep(0.2);
        checkColisionCombat(map01, &enemy_vert_03, &enemy_horz_03, &enemy_alive_03);
        Sleep(0.2);
        checkColisionCombat(map01, &enemy_vert_04, &enemy_horz_04, &enemy_alive_04);
        Sleep(0.2);
        checkColisionCombat(map01, &enemy_vert_05, &enemy_horz_05, &enemy_alive_05);
        Sleep(0.2);
        checkColisionCombat(map01, &enemy_vert_06, &enemy_horz_06, &enemy_alive_06);
        Sleep(0.2);
        // Get Player Input
        int KB_INPUT = _getch();
        // Move Player
        playerMovement(map01, &vert, &horz, &KB_INPUT);        
        Sleep(0.2);
        // Action
        if (KB_INPUT == KB_SPC)
        {
            collectKey(map01, &vert, &horz, &keys);
            Sleep(0.2);
            openDoor(map01, &vert, &horz, &keys);
            Sleep(0.2);
            pull_Lever(map01, &vert, &horz, &tower_level);
            Sleep(0.2);
            grabPotion(map01, &vert, &horz, &potions);
            Sleep(0.2);
        }

        // Move Enemies
        enemyMovement(map01, &enemy_vert_01, &enemy_horz_01, &enemy_alive_01);
        Sleep(0.2);
        enemyMovement(map01, &enemy_vert_02, &enemy_horz_02, &enemy_alive_02);
        Sleep(0.2);
        enemyMovement(map01, &enemy_vert_03, &enemy_horz_03, &enemy_alive_03);
        Sleep(0.2);
        enemyMovement(map01, &enemy_vert_04, &enemy_horz_04, &enemy_alive_04);
        Sleep(0.2);
        enemyMovement(map01, &enemy_vert_05, &enemy_horz_05, &enemy_alive_05);
        Sleep(0.2);
        enemyMovement(map01, &enemy_vert_06, &enemy_horz_06, &enemy_alive_06);
        Sleep(0.2);

    } while (1);
    
}